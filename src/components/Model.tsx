/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { Box, Cone, Sphere, useGLTF } from "@react-three/drei";
import { MeshStandardMaterial } from "three";
import { RigidBody } from "@react-three/rapier";
import { motion } from 'framer-motion-3d';

export function Model(props) {
  const { nodes, materials } = useGLTF("/page.glb");

  const transparentMaterial = new MeshStandardMaterial();
  transparentMaterial.transparent = true;
  transparentMaterial.opacity = 0.0;

  return (
    <group {...props} dispose={null} position={[0, 0, 0]}>
      <mesh
        name="InvisibleWall"
        geometry={nodes.InvisibleWall.geometry}
        material={transparentMaterial}
        position={[0, 2, 0]}
      />
      <RigidBody type="fixed" colliders="trimesh">
        <mesh
          name="Floor"
          geometry={nodes.Floor.geometry}
          material={transparentMaterial}
        />
      </RigidBody>
      <motion.mesh
        geometry={nodes.Floor.geometry}
        material={nodes.Floor.material}
        initial={{ scale: 0 }}
        animate={{ scale: 1 }}
        transition={{ type: "spring", bounce: 0.5, delay: 0.25 }}
      />
      <RigidBody position={[0, 20, 0]} colliders="hull">
        <Sphere args={[0.5]} />
      </RigidBody>
      <RigidBody position={[0, 10, 0]} angularVelocity={[0.2, 0, 0]} colliders="hull">
        <Box />
      </RigidBody>
      <RigidBody position={[0, 26, 0]} colliders="hull">
        <Cone args={[0.5]} />
      </RigidBody>
    </group>
  );
}

useGLTF.preload("/page.glb");
